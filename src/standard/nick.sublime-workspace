{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Devic",
				"DeviceSpecifier Enum (device_specifier.rs) : pub enum DeviceSpecifier {               "
			],
			[
				"Devi",
				"DeviceSpecifier Enum (device_specifier.rs) : pub enum DeviceSpecifier {               "
			],
			[
				"Dev",
				"DeviceSpecifier Enum (device_specifier.rs) : pub enum DeviceSpecifier {               "
			],
			[
				"DEVICE_TYPE",
				"DEVICE_TYPE_ALL"
			],
			[
				"kerne",
				"kernel_runs Let (test_buffer_ops_rect.rs) : let mut kernel_runs = 1i32              "
			],
			[
				"vec",
				"vec_dims           FnArg (test_buffer_ops_rect.rs) : vec_dims                                    "
			],
			[
				"enqueue_read",
				"enqueue_read_buffer_rect                    Function (functions.rs) : pub unsafe fn enqueue_read_buffer_rect<T: OclNum, L: AsRef<EventList>>(                                       "
			],
			[
				"TES",
				"TEST_ITERS"
			],
			[
				"try_to",
				"try_to_size"
			],
			[
				"kernel",
				"kernel_runs"
			],
			[
				"en",
				"enqueue"
			],
			[
				"src_Bu",
				"src_buffer_vec"
			],
			[
				"buffer",
				"buffer_slc_pitch_bytes"
			],
			[
				"host_row",
				"host_row_pitch_bytes"
			],
			[
				"buffer_ro",
				"buffer_row_pitch_bytes"
			],
			[
				"reg",
				"region_bytes"
			],
			[
				"host",
				"host_origin_bytes"
			],
			[
				"src_bu",
				"src_buffer_vec"
			],
			[
				"src_",
				"src_vec_origin"
			],
			[
				"region",
				"region_size"
			],
			[
				"regio",
				"region_size"
			],
			[
				"regi",
				"region_size"
			],
			[
				"src_buf",
				"src_buffer_origin"
			],
			[
				"cop",
				"copy_range"
			],
			[
				"obj",
				"obj_core"
			],
			[
				"new_ev",
				"new_event_ptr"
			],
			[
				"wait_list",
				"wait_list_ptr"
			],
			[
				"wait_l",
				"wait_list_len"
			],
			[
				"src_off",
				"src_offset_bytes"
			],
			[
				"dst",
				"dst_buffer_vec"
			],
			[
				"src",
				"src_buffer"
			],
			[
				"Context",
				"ContextProperties"
			],
			[
				"Conte",
				"ContextProperties"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/nick/projects/ocl/src/core/functions.rs",
			"settings":
			{
				"buffer_size": 94454,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/nick/.config/sublime-text-3/Packages/User/Monokai Extended/Monokai Extended.tmTheme",
			"settings":
			{
				"buffer_size": 41355,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/nick/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
			"settings":
			{
				"buffer_size": 124,
				"line_ending": "Unix"
			}
		},
		{
			"file": "program_builder.rs",
			"settings":
			{
				"buffer_size": 10805,
				"line_ending": "Unix"
			}
		},
		{
			"file": "program.rs",
			"settings":
			{
				"buffer_size": 4065,
				"line_ending": "Unix"
			}
		},
		{
			"file": "kernel.rs",
			"settings":
			{
				"buffer_size": 21678,
				"line_ending": "Unix"
			}
		},
		{
			"file": "queue.rs",
			"settings":
			{
				"buffer_size": 5039,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Rust/Cargo.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Rust/Cargo.sublime-build",
					""
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Test"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Rust/Cargo.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Rust/Cargo.sublime-build",
					""
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Test"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust/Rust.sublime-build",
					""
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Rust/Cargo.sublime-build",
				"Test"
			]
		],
		[
			[
				[
					"Packages/User/Cargo_Nick.sublime-build",
					""
				],
				[
					"Packages/User/Cargo_Nick.sublime-build",
					"Run"
				],
				[
					"Packages/User/Cargo_Nick.sublime-build",
					"Test"
				],
				[
					"Packages/User/Cargo_Nick.sublime-build",
					"Bench"
				],
				[
					"Packages/User/Cargo_Nick.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/User/Cargo_Nick.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 117.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 213.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/nick/projects",
		"/home/nick/projects/ocl",
		"/home/nick/projects/ocl/examples",
		"/home/nick/projects/ocl/src",
		"/home/nick/projects/ocl/src/core",
		"/home/nick/projects/ocl/src/core/custom",
		"/home/nick/projects/ocl/src/standard",
		"/home/nick/projects/ocl/src/tests"
	],
	"file_history":
	[
		"/home/nick/projects/ocl/src/core/functions.rs",
		"/home/nick/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/nick/projects/ocl/src/standard/sampler.rs",
		"/home/nick/projects/ocl/src/standard/image.rs",
		"/home/nick/projects/ocl/src/standard/buffer_cmd.rs",
		"/home/nick/projects/ocl/src/lib.rs",
		"/home/nick/projects/ocl/src/standard/buffer.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/mod.rs",
		"/home/nick/projects/ocl/src/standard/kernel.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/buffer_cmd.rs",
		"/home/nick/projects/ocl/src/util.rs",
		"/home/nick/projects/ocl/src/core/mod.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/examples/trivial.rs",
		"/home/nick/projects/ocl/src/standard/image_builder.rs",
		"/home/nick/projects/bismit/src/cmn/mod.rs",
		"/home/nick/projects/bismit/src/cmn/slice_dims.rs",
		"/home/nick/projects/bismit/src/cmn/cortical_dims.rs",
		"/home/nick/projects/bismit/src/map/area_map.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/map/slice_map.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/cortex.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/map/area_map.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/axon_space.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/cmn/mod.rs",
		"/home/nick/projects/ocl/src/standard/device.rs",
		"/home/nick/projects/ocl/src/standard/device_specifier.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/device_specifier.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/examples/images.rs",
		"/home/nick/projects/ocl/examples/events.rs",
		"/home/nick/projects/ocl/examples/trivial.rs",
		"/home/nick/projects/ocl/src/standard/mod.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/tests/test_buffer_ops_rect.rs",
		"/home/nick/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/nick/projects/ocl/RELEASES.md",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/buffer.rs",
		"/home/nick/projects/ocl/src/tests/test_buffer_ops_rect.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/kernel.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/examples/threads.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/examples/timed.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/examples/events.rs",
		"/home/nick/projects/ocl/examples/timed.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/tests/test_timed.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/tests/test_events.rs",
		"/home/nick/projects/ocl/examples/info.rs",
		"/home/nick/projects/ocl/examples/basics.rs",
		"/home/nick/projects/ocl/src/tests/test_events.rs",
		"/home/nick/projects/ocl/src/tests/test_timed.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/platform.rs",
		"/home/nick/projects/ocl/src/standard/platform.rs",
		"/home/nick/.config/sublime-text-3/Packages/RustAutoComplete/Preferences.sublime-settings",
		"/home/nick/projects/ocl/Cargo.toml",
		"/home/nick/projects/ocl/src/cl_h.rs",
		"/home/nick/.config/sublime-text-3/Packages/User/RustAutoComplete.sublime-settings",
		"/home/nick/projects/ocl/src/standard/spatial_dims.rs",
		"/home/nick/projects/ocl/examples/images.rs",
		"/home/nick/projects/ocl/examples/threads.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/image_builder.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/spatial_dims.rs",
		"/home/nick/projects/all_projects.sublime-project",
		"/home/nick/.config/sublime-text-3/Packages/User/Cargo_Nick.sublime-build",
		"/home/nick/src/github.com/cogciprocate/bismit/src/<std macros>",
		"/home/nick/src/github.com/cogciprocate/bismit/src/cmn/cortical_dims.rs:232:1: 232:2/home/nick/src/github.com/cogciprocate/bismit/src/cmn/cortical_dims.rs",
		"/home/nick/src/github.com/cogciprocate/bismit/src/cmn/<std macros>",
		"/home/nick/projects/ocl/src/standard/simple_dims.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/simple_dims.rs",
		"/home/nick/projects/bismit/src/axon_space.rs",
		"/home/nick/projects/bismit/src/map/slice_map.rs",
		"/home/nick/projects/bismit/src/tests/automated.rs",
		"/home/nick/projects/bismit/src/tests/kernels.rs",
		"/home/nick/projects/bismit/src/tests/util.rs",
		"/home/nick/projects/ocl/src/standard/pro_que.rs",
		"/home/nick/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/nick/projects/ocl/src/tests/test_basics.rs",
		"/home/nick/projects/bismit/src/dendrites.rs",
		"/home/nick/projects/bismit/src/iinn.rs",
		"/home/nick/projects/bismit/src/minicolumns.rs",
		"/home/nick/projects/bismit/src/pyramidals.rs",
		"/home/nick/projects/bismit/src/sensory_filter.rs",
		"/home/nick/projects/bismit/src/spiny_stellates.rs",
		"/home/nick/projects/bismit/src/synapses.rs",
		"/home/nick/projects/ocl/src/standard/pro_que_builder.rs",
		"/home/nick/projects/ocl/src/error.rs",
		"/home/nick/projects/ocl/src/standard/program_builder_ref_builder_style.rs",
		"/home/nick/src/github.com/cogciprocate/ocl_rust/src/standard/<std macros>",
		"/home/nick/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/nick/projects/bismit/src/lib.rs",
		"/home/nick/projects/bismit/src/cortex.rs",
		"/home/nick/projects/bismit/src/cortical_area.rs",
		"/home/nick/projects/bismit/src/tests/testbed.rs",
		"/home/nick/projects/bismit/src/tests/hybrid.rs",
		"/home/nick/projects/bismit/src/encode/idx_data.rs",
		"/home/nick/projects/ocl/src/tests/mod.rs",
		"/home/nick/projects/ocl/src/tests/test_buffer_copy.rs",
		"/home/nick/projects/ocl/src/tests/test_trivial.rs",
		"/home/nick/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/nick/projects/ocl/README.md",
		"/home/nick/.config/sublime-text-3/Packages/Rust/RustComment.tmPreferences",
		"/home/nick/projects/ocl/examples/info_core.rs",
		"/home/nick/.config/sublime-text-3/Installed Packages/Rust.sublime-package",
		"/home/nick/projects/ocl/examples/runall.sh"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/nick/projects/ocl/src, /home/nick/projects/ocl/examples, /home/nick/projects/bismit/src",
			"/home/nick/projects/ocl/src, /home/nick/projects/ocl/examples"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"<key>",
			"<key>findHighlight</key>",
			"()\"",
			"Buffer ",
			"ImageFormat",
			"Program",
			"mut self",
			"self.",
			"mut self, ",
			"mut self",
			"DeviceSpecifier",
			"DataShape",
			"highlight",
			"CmdKind",
			"/// # Panics",
			"#",
			"write",
			"copy",
			"&'a mut Kernel",
			"kernel_runs",
			"kernel",
			"&'a mut Kernel",
			".set_arg_buf_named",
			"fn enqueue",
			"_bytes",
			"host_",
			"buffer_",
			"buffer_origin",
			"ADDEND * (kernel_runs - 1) as f32",
			"ADDEND * kernel_runs as f32",
			"dest_list",
			"wait_list",
			"OpShape",
			"OpKind",
			"read_region",
			"test_iter",
			"kernel_runs",
			"region_val",
			"SLICES_TO_PRINT",
			"vec_buf",
			"buf_0",
			"DIMS",
			"vec_buf_0_origin",
			"SLICES_TO_PRINT",
			"full_dims",
			"region",
			"slices_to_print",
			"region",
			"region_size",
			"origin",
			"vec_buf_0",
			"dark_orange",
			".to_size()",
			".to_len()",
			".try_to_size()",
			"self.try_padded_len",
			"/home/nick/.config/sublime-text-3/",
			"padded_buffer",
			"padded_buffer_len(&self, len: usize) -> usize",
			"padded_buffer_len(&self, incr: usize) -> usize",
			"simple_dims",
			"obj_core: ProgramCore",
			"BufferDims",
			".linear_len()",
			"SimpleDims",
			".wait_opt(",
			".max_work_group_size",
			"buf_0_vec",
			"dst_buffer",
			"dst_buffer_vec",
			"src_buffer",
			"src_buffer_vec",
			".write(",
			".read(",
			"fn read",
			"buffer_origin",
			"util::len3_to_size3::<T>",
			"util::len_to_size::<T>(",
			"len_to_",
			"padded_buffer_len::<T>(",
			"<T: OclNum>",
			"::<T>",
			"<T: OclNum>",
			"::<T>",
			"<T: OclNum>",
			".padded_buffer_len(",
			"padded_buffer_len<T>(",
			".padded_buffer_len(",
			"padded_buffer_len(",
			"T",
			"linear_len",
			"pro_que",
			"dims[0]",
			"_vec",
			"ocl::"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"",
			"self",
			"",
			"BufferCmdDataShape",
			"BufferCmdKind",
			"/// ## Panics",
			"##",
			"copy",
			"OclResult<&'a mut Kernel>",
			"ttl_runs",
			"kernel_eq",
			"kernel_add",
			"OclResult<&'a mut Kernel>",
			"_size",
			"dst_",
			"src_",
			"src_origin",
			"old_val",
			"cur_val",
			"enew",
			"ewait",
			"DataShape",
			"CmdKind",
			"region",
			"kernel_runs",
			"region_val",
			"in_region_val",
			"PRINT_SLICES_MAX",
			"vec",
			"buf",
			"dims",
			"slices_to_print",
			"DIMS",
			"full_dims",
			"dims",
			"SLICES_TO_PRINT",
			"vec_dims",
			"region",
			"region_origin",
			"vec",
			"orange",
			".to_len().unwrap()",
			".to_size()",
			"self.try_to_padded_len",
			"",
			"padded_buffer_len(&self, incr: usize) -> OclResult<usize>",
			"spatial_dims",
			"obj_core: ProgramCore1",
			"MemDims",
			".to_len()",
			"SpatialDims",
			".ewait_opt(",
			".max_wg_size",
			"vec_buf_0",
			"buf_1",
			"vec_buf_1",
			"buf_0",
			"buf_0_vec",
			"region",
			"",
			"padded_buffer_len(",
			"",
			".padded_buffer_len::<T>(",
			"padded_buffer_len<T: OclNum>(",
			".padded_buffer_len::<T>(",
			"padded_buffer_len<T>(",
			"D",
			"proque",
			"pro_que.dims()[0]",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/nick/projects/ocl/src/core/functions.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94454,
						"regions":
						{
						},
						"selection":
						[
							[
								9653,
								9653
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3860.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/nick/.config/sublime-text-3/Packages/User/Monokai Extended/Monokai Extended.tmTheme",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41355,
						"regions":
						{
						},
						"selection":
						[
							[
								996,
								996
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 292.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/nick/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "program_builder.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10805,
						"regions":
						{
						},
						"selection":
						[
							[
								1563,
								1563
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "program.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4065,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								368
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "kernel.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21678,
						"regions":
						{
						},
						"selection":
						[
							[
								3216,
								3216
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1377.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "queue.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5039,
						"regions":
						{
						},
						"selection":
						[
							[
								421,
								421
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 300.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/Rust/Cargo.sublime-build",
	"project": "/home/nick/projects/all_projects.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 272.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
